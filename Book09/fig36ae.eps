%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.94a Copyright 2003 Radical Eye Software
%%Title: tmp.dvi
%%BoundingBox: 148 395 761 670
%%DocumentFonts: CharterBT-Roman
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E tmp -o i36ae.eps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.10.09:1634
%%BeginProcSet: texc.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File  8r.enc as of 2002-03-12 for PSNFSS 9
%
% This is the encoding vector for Type1 and TrueType fonts to be used
% with TeX.  This file is part of the PSNFSS bundle, version 9
% 
% Authors: S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry, W. Schmidt
%
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida + Euro.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (6) /Euro is assigned to 128, as in Windows ANSI
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /Euro /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CharterBT-Roman
%!PS-AdobeFont-1.0
%%CreationDate: Fri Nov 2 19:00:13 1990
% Bitstream Type 1 Font Program
% Copyright 1990 as an unpublished work by Bitstream Inc., Cambridge, MA.
% All rights reserved.
% Confidential and proprietary to Bitstream Inc.
% U.S. GOVERNMENT RESTRICTED RIGHTS
% This software typeface product is provided with RESTRICTED RIGHTS. Use,
% duplication or disclosure by the Government is subject to restrictions
% as set forth in the license agreement and in FAR 52.227-19 (c) (2) (May, 1987),
% when applicable, or the applicable provisions of the DOD FAR supplement
% 252.227-7013 subdivision (a) (15) (April, 1988) or subdivision (a) (17)
% (April, 1988). Contractor/manufacturer is Bitstream Inc.,
% 215 First Street, Cambridge, MA 02142.
% Bitstream is a registered trademark of Bitstream Inc.
11 dict begin
/FontInfo 9 dict dup begin
/version (2.0-1.0) readonly def
/Notice (Copyright 1990 as an unpublished work by Bitstream Inc. All rights reserved. Confidential.) readonly def
/FullName (Bitstream Charter) readonly def
/FamilyName (Bitstream Charter) readonly def
/Weight (Normal) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -109 def
/UnderlineThickness 61 def
end readonly def
/FontName /CharterBT-Roman def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding StandardEncoding def
/FontBBox {-161 -236 1193 963} readonly def
/UniqueID 15530648 def
currentdict end
currentfile eexec
D9D66F632A4812FBAE89F8A58F28761E72B1FFC5625083034B3E1ADCDDE02FA4
B44AE8F3A7B85787C8C90047C8CC19AF3F685AB532A42DE6DDE2B6C900F290EA
0E843501E6741A47C20B736B9394214370E11946173895F8DE508780F72F0EBA
B617E6A7468FB2D84028D377CDC3C4E337E3066313976E514621C47725A95FE2
55D6B29C4B5E91721651BF1D56CDCD84D4FA9F072BE27E14FBB961CCD91008A1
CDEFB20D6B8674ACB2DC8A1C918BC55D8CBCA5C32F80A63C54119B24DAB62F09
9A91E000DC8726FCD5AB1CEC8160DC0ADB17E317C54D62AB0ED986197F6B0529
45CF2090B780A57004AF4BD3FA2F5CCCEDB90A3CC06EB295C5E09E3A63BBD650
8D1CBF80F7CF38C95540896C7A3D301BF53DADCEDF4544FDCD52CB35FFDFF986
CCF2284A09F69C67006AC7FAAFC626BB2B4F177B7927638476BDE81C92082A30
5782B405335048291A27F9E7564A1A32ED4820E20EEBD649CF9445FB4AFE77AF
FFF1E30AFCAA76CBE1E9E1D347ECD26157FACC5814014AF522D2DD6A0EAC8A99
489464E48740185286F9FECAE74869679FD2432A04E2A13652D99845DE08AAC0
88E24B10664925F9349B4F2B110FD6C35C0A12D90F4E9EEF53D5F4F56149995C
4EB35DAE4FF2839382D05A26DC703935C4EC80D0500C60752113D0701777B14A
AA05AF6428926F8A8E990317A0B8FB0CEAF8F5AF8AE7CBA11EBDC6F7C13FED0B
558A27CBCDE4FB7AB119532DD43C9C2C9C5CFE8F648A67E9E289A69C9DFDDD6C
1FACC26DAB3697A170AE59F5D4EA3141667901E70307B00C067B81CE96FB3A4D
C9021D8814424EE6A26D04BF42D16363ADD70D9B119FEE817042865FBE7094F8
4CD918C631D78A2B0FF5C2D014582C29A11E838017E95F881BA04345C99FA410
82AF78A21844CB2A7D8C90AFE6791787C709EAE190CF79D6A9BAE72428B928EF
DA00FAA03E96098AB039BE437A7750CA4ABFDE978B55CB7A20FBE956CCEFD7E3
2C0027AD29B8D21C5AE5B1CE5F3C6D3F29A0C99A68BF49E5A1D519A54D2EA19A
60E0FE5C1E4381433329A24526343CBBADCE13D30C9CFF4B52A5C5F0F7589CBB
CC534AB3D74F9B3B01F8D0B33C60947E117513EFA33DEB1DF9548655DFAD09D2
F3DE2DC36D53651003587894EB357482F68EC82A9E140981F47857BE48E4E094
4D0E29498274594181BB8AD7FDB6C54193D82B9B663071CDF1DC9CF3E6D032C7
8ED261A772DB0D478BCA15D3E416F0658002DE3B6B1F38861E3366DC254D9E9E
8AF9D76C0CC64D0E5E8BFFDF4840DE56190D47EC4B6A97E1D09AA10EC89A3C47
5363EED630B3B78199AD7E76AFD09680F934D1582125BD2E16E51AEB6C376C33
1F091A85796A8278AE5E0A873EFF2195190E7D9FF54EFDC5C30D38FCBABCA7D4
C9D90F414418C7343CBB3520257BE0F74D307388E95260E9CA7708A231AE5E96
6D8E84C6EBDB7B26758CB983FA09650FF4BB772DFF8130652F5AFDBEB9631776
656663828AD45D5AF9A513E3A9AED34C92CC65347138160086A39A30F903FCED
1D163C9E5E70792BE3DAB126A702EBCA4CA4B282C8E1B9A8AC0BAF795333376E
B4C186FD78C91DFC0E998E15BC38C7D1B577CDA4DE420645C8AABF5A03794408
7CB2F5204E0FEBF88501BC803AEA313C8754B85AB2525A740B80BB8B3C209EEA
A6847BC3EE86F559E9A52613C9158A3A9D45C1CEDD70C8C4850AE8DAF010FAC2
59ED6E5A289A9F9E32ABEBF919B813E15DA7A93942A9F9A0D2322C8B3CBFDFFD
E33CEB2236DD0B8E075272A4DCCE2297945017E47CA00E739BF74AE092DE4417
E40D2AA63A1D53F1CDFB5885F657994814F14B3AD58805DC0020DA959ED5C910
31091BE6B1D2CAFCC1A28DCB5D3CC5B27C1C7C3A820EA12732D95E3C01A383C8
B5A564E88A00BBA229FC34410FA9D44D5982CB77E9A0E37AF5E9935EAE7B3889
DE3AB3FDE0F8EFC3B88AF70F6D004539B0B98F7001609622A6FEE4339B2569C3
1042939602AADD3A24389AAB5970AACC410555B525925D9BEEF7AE8B14714B8B
1649A8B40F22F8F3F72463DB8F3807EF11C82E84E736A060CB25A9E737E4F56E
774305DEC07D2DA7DECA16E682C4F6C7A55DD17959CA192641C9B620023B0EE9
B9AB18BF623F5E298696F4CC8713B5C56EE1B48F328BF3CD1141B0984F892C35
8BFF2C444B2D79168026D2CB4300838E6E37D565F94FCF9C059DA1B0A3094840
422B6F1658F14EA4FDE9FB408F222758ACA18D93F05E625C39B42FA86CDF7476
0B7A0962E50DDA7352069A414D615BA09E156C64F54FDAF113F375AEC891F096
C18C8974EC992B23DD184A0643CF7397EC2FF1AEF850345278C321654959016B
20B867FF9F77520327CCB89B0EB07AE1EC271464BE837BE753037D325890DBED
77EE16B3760D2257AD918525794DE9B940CE475FF2AA502E01E25A43845C0050
21D360960E086BFFDB8FDE34A384557A36D7C11D94CB024257718CDB3BCB2AC0
442FDA923F93BEBF07575429B698ACF0BA8EB294B9AF2A79F6FF43C756A23826
4EA63E93D092044D9F6ED6837EDABABA986173A19E2BF00A428256F3C8A4C17D
F4B60F3312FFE826D8ACAF743FC153AE31B852C8B9C62D7798A82465238AC366
467405422CB32B2039907FACB3F6D71663DE91D1782ABC27EEF74296B5A8CF3F
247852BA56D5637DA0A224FD3627528777C1BDB57BA64D505EBA49C3CD7F92D2
E6F78D08128C27B9972501BEFB6B0BF7B4F2044FAED9C1CCB207909FAD13D618
57519977DD5BBD315BF9F477C0D9002F98506B1CD3D81053D9D8D56FC937BD8E
491D98A5FF3957BE483A8A0C8F3A916A490450E44D00014DC28E3E9C4626E4AE
EF66E6EAFEB3D968952B396AE8952442D7AAA550AF108ED81E9D0107D3A06F0E
D18A9966182BD3AC067588C3EAA9C7E38010E3A82DDA1A0CC8A3FEE8D1DBEE75
A3E114AC5E47C8041C425BFC36395C401B2E8CFFACD405960D7F10CE09BA2A54
E81B2FD8D5EDDEDBC14798CC7690C4F7D0676DBC35A46813EA207D855C08BF91
ECE6EE2DF484D3EA075AA293BB4087BF507B82C4E6617ECE60AED689FB6778E7
73B4B066BA72C89A0211A0511605B1C62DCDB2914349CE013D51FEB576E7161C
EAB3E826F0ECB65E1216A6C15D9B416A86F976D1CAC7529376BCE99769D4B897
F74BB370A4442567B130565E270FCF378F69E3BFCCCEC03B9614D2B86612647A
C576DE83DDA259395011B3A13BD144BDFAAABE1ECEF3DE0D6DDA56482018B9E4
7E52E366966DE474C1D8E9C4E792D5F6A39240C6D68B802317726EEACFBB36DB
5250CBB6090967649C8934ED82714DF4EBA7FB3A1A6A26CCE84B62846E3CF710
92E551F7029644D3AE95DDFAD10F52D92DAF8B6713619F990892CB9E0CD0C106
0AAD886187C51926CFFB4778BC7145C8DAC75A198CC04CFE2CA4234B3A29D8EB
2B64C588DF3301A724D91458933A2AFCFE0708AAAAB61974036E02741676FE8B
445C8264D9FDB4619FD6B53A9DDE874B14FB001A3D0EA3FB420575A9BA78A38E
3C14EF4CD3BE8E4F3C0987AED3D51AA45781AC584128527C07577F3C23B83F29
48AA6610082592E61E1D5F1BCDADFCAB81DED9B1FCCF75065DCBFE0EE74B076A
621FC5CAAA6286AC2398F5C83FB930670077D8DB7A6F6F1DCBAC7693D106E9F8
6E162103B675A6C6C4D60FFF02BE315DF4A34C372D4C8BD8857D176B72873E30
A894F1EBFEA80708A546DB769CA0E14AB317BAC0F6D3A81A477FA9B9C73B4150
4F65B50ED14684C3BA29175C583FF7A87F0E7D1D66A6DB36C1B0A2A6EB941DD0
6681C38988CE65282F1BDCDC96E6AF5F32FD62EEF858D3CE7B0B75D00DDFA9F7
32AC9F4FFC10416CE520DB9BEBA0C1A0EB1AB2D7C2B2F72F022D8DD151DF904B
ADBB7EC23C70DF159AB4FBDAC01BA2106D238861FD05235021144018F97A54D1
A8F64476EB83A51D36873019B5D2DCDCDFDBF529B38F41384B270EEABBD33750
AE584FFF5FAD0F038E5B841DA587417FA6503AB86584A08A9A632DB1F9D628B5
8DF74AB8BE19BB8DB4460D55207ED7E78D8F1FE9E2DEB672ACD141633FE727C3
A0D9C29077B4634362B1CEBCCF3017D0EA0372F0D33AC6329A92E6DB60969840
4F32441ECDDF512B3740F479566D4B86D37542EFE72257C29158C51E7E5F1C4A
E9D8453FFD35D0F770066074E22F9B7B4743CC551B2C5C1D840B9AED3ABDE77C
AF19B2EE732F1C11EBB00882551FACE1D6D0CA54661B2D2AD749CACA428433D0
F3BC1ACDB4206A6BFD9B1305A33F8A3EBC32434E5DF8E7B0D4F67655E09F581F
FCB411801DC6E7F17D51D1986DB8240E577613B268BBF508061DEA61013CAC46
50415FA2FC0F92524756885678F5E0354D3BD65E29F8914BEB723E86D4DB68D6
7001426A51D9D57A300A7FB75DB2E547D9AF05AD81F6CF311EFD7432FDEDB8C7
DD6F056FB2661B02C736EA352BB9CF624E756D08C86C4055B444286CE3EE8B60
0A09145FFA68B5930DB6D1777A90979A82EBBCCEE6B4BBA95A439A3747ABA9F7
7A2FBD112DC4D3C311A5509FBED6BDCBC8925A95616B58B20B11BDEE8B60BB81
343EBE464C3D90E5B8A2A1892E6DB05E259B3F362781FE8C24206401CDA1856F
C3155C1B8F4CAB0FB9F54D5A1AF0B570906B994AD56929E4E7E59FDE25EF8D27
0AF9E71FA97B1EE1196D2CD4888440B3F6CB3B3EAC089F3771EC516283EB132F
EA3027A0480210D0D0F9B3E9541D7377D4FAA7AD213AF1419F08FBC9B054BCB8
5F60FAFD812096FBD556A64490E5918611A27F14C6010D56E797444D864C125D
97818D6515A65C66EF1A1D8FAA3CFF26899E364B7389BA68562C294F49C4D130
D896BC68FB4D8D20E21F3AF8FBBBCE933059171D39AE6BA9E3B3F0AB1E754328
C1D23E04E985859D3897A4CA563E52D4F3F29906363E696BB357127494931D88
3C9CA0637F844E55A7A88A9675B19A8C646BEAD44D79E73879590AB4FE941F6A
F36AFDFD27BA9C6309779F7D0A333C07F31FA82BCAAC40AFCCE998F25D148CC1
DF3400EF6D30B7B067D87852EB357681DCB563D6EF74D2EE9EDA32B224093491
6920C1D3BEE859A035D2C19AF1DC24C1E9949AE4D16ACB635C17F60B3905EABE
5B53CDB277DC5983E17372B4283ED57DF11560C421F53F7950A0ABABF02D38B0
70B1A97C4090E754A4FC9192CCBB65E0125874E390E60496EB965364F73F74C6
E953EB453F91FD7999E9A0B92BC68C3BA54F7FD66C0A1427C907FD5AB75AD39D
32F922104B360D53B500916655D4AD123291BBF39D30E4CEE6ECA56B0E176581
D3AB26DC0897182B508D5A3A8387E7E2A299018509C779E92BC97D0FEC72BE6B
835DD25DF35B2D1A2999CC22CE4484A641944F5040EB98DCF26363409ED2B5C6
6E23DF3D11EDEA253FC082B098BB25D9D41E6CB65AA61C9E192791BAC689FA50
914D2BE1EF7995460A41E1FAF52F3DEBC155DCAC5784DA47C3D3CA45DA44803D
BF237325F6679BF9A100C002AB9C7B774135625351108064E041429411FF4178
3792630E442E5D8F41E55B361A82503D9C5C9CB0547D6B7B51EA316F17F1F181
1306D102F0F7C8B3CE4DCF0313C22131381B8F53B33B9F741A39BCC27340BAE0
D5D384619B883E2E63A68E73C51C284FC9CB9677A5BF3FC223C706380F1343B2
4359BF93C89B3548E1578E72C3FEF0A6B5C423603A8A3D85AEE8B4F20CD1F1EF
67C2D8C17BC83AF91841D091179B4D7B8BD966BBEFE00E1CFCD5FAFAD236C8AE
2438DA8B798AB444AAB5D979527F15237E124BF22B4BDB60BC0BFC3DC4D792FA
E78E2AA58842170D238B5D6E4520F52ECDF9988A83A05F845DFD0D4FE9EF3AFC
61A08311320D2A3AA8AD9965A998A3C4846E502F356879D475B8261C598D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (tmp.dvi)
@start /Fa 174[152 116 152 148 180 108 127 2[153 144
111 120 69[{ TeXBase1Encoding ReEncodeFont }11 207.555
/CharterBT-Roman rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop Black Black 639 2668 a @beginspecial
0 @llx 0 @lly 611 @urx 268 @ury 6110 @rwi @setspecial
%%BeginDocument: tmpfig.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: i36ae.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Sun Oct  9 16:34:56 2005
%%For: rfitzp@Angelus.local (Richard Fitzpatrick)
%%BoundingBox: 0 0 611 268
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 268 moveto 0 0 lineto 611 0 lineto 611 268 lineto closepath clip newpath
-27.0 405.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
15.000 slw
n 900 3900 m
 3300 3900 l gs col0 s gr 
% Polyline
n 900 4500 m
 5700 4500 l gs col0 s gr 
% Polyline
n 900 5400 m
 10500 5400 l gs col0 s gr 
% Polyline
n 900 3225 m
 900 3375 l gs col0 s gr 
% Polyline
n 900 3825 m
 900 3975 l gs col0 s gr 
% Polyline
n 900 4425 m
 900 4575 l gs col0 s gr 
% Polyline
n 900 5325 m
 900 5475 l gs col0 s gr 
% Polyline
n 2100 3225 m
 2100 3375 l gs col0 s gr 
% Polyline
n 3300 3825 m
 3300 3975 l gs col0 s gr 
% Polyline
n 5700 4425 m
 5700 4575 l gs col0 s gr 
% Polyline
n 10500 5325 m
 10500 5475 l gs col0 s gr 
% Polyline
n 1500 3225 m
 1500 3375 l gs col0 s gr 
% Polyline
n 1500 5325 m
 1500 5475 l gs col0 s gr 
% Polyline
n 900 2400 m
 1500 2400 l gs col0 s gr 
% Polyline
n 900 2325 m
 900 2475 l gs col0 s gr 
% Polyline
n 1500 2325 m
 1500 2475 l gs col0 s gr 
% Polyline
n 900 6000 m
 3000 6000 l gs col0 s gr 
% Polyline
n 900 6600 m
 3600 6600 l gs col0 s gr 
% Polyline
n 900 5925 m
 900 6075 l gs col0 s gr 
% Polyline
n 900 6525 m
 900 6675 l gs col0 s gr 
% Polyline
n 3600 6525 m
 3600 6675 l gs col0 s gr 
% Polyline
n 3000 5925 m
 3000 6075 l gs col0 s gr 
% Polyline
n 900 3300 m
 2100 3300 l gs col0 s gr 
% here ends figure;
$F2psEnd
rs
showpage

%%EndDocument
 @endspecial 0 0 0 TeXcolorrgb 5589 1918 a Fa(G)p Black
0 0 0 TeXcolorrgb 1089 868 a(N)p Black 0 0 0 TeXcolorrgb
152 w(K)p Black 0 0 0 TeXcolorrgb 677 568 a(E)p Black
0 0 0 TeXcolorrgb 677 1318 a(L)p Black 0 0 0 TeXcolorrgb
639 1618 a(M)p Black 0 0 0 TeXcolorrgb 677 2368 a(P)p
Black 0 0 0 TeXcolorrgb 677 2668 a(Q)p Black 0 0 0 TeXcolorrgb
789 1918 a(F)p Black 0 0 0 TeXcolorrgb 189 w(O)p Black
0 0 0 TeXcolorrgb 752 868 a(H)p Black Black Black eop
end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
