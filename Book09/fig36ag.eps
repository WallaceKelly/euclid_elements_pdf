%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.94a Copyright 2003 Radical Eye Software
%%Title: tmp.dvi
%%BoundingBox: 148 399 770 670
%%DocumentFonts: GreekGaramond
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E tmp -o i36a.eps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.10.09:1628
%%BeginProcSet: texc.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: GreekGaramond
%!PS-AdobeFont-1.0: Greek-garamond Carmelo Lupini
%%CreationDate: Wed Oct 31 21:01:29 2001
% Converted from TrueType font 'gr_gar.ttf' by ttf2pt1 program
%
% Attention: Font was renamed to the new fontname 'GreekGaramond'
% This name was choosen only for identification purpose, the trademarks of
% any third parties or other rights are fully recognized.
%
%%EndComments
12 dict begin
/FontInfo 9 dict dup begin
/version (1.0) readonly def
/Notice (Carmelo Lupini) readonly def
/FullName (GreekGaramond) readonly def
/FamilyName (GreekGaramond) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.000000 def
/isFixedPitch false def
/UnderlinePosition -91 def
/UnderlineThickness 24 def
end readonly def
/FontName /GreekGaramond def
/PaintType 0 def
/StrokeWidth 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox {-60 -307 958 818} readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 69 /Epsilon put
dup 72 /Eta put
dup 75 /Kappa put
dup 76 /Lambda put
dup 77 /Mu put
dup 78 /Nu put
dup 79 /Omicron put
dup 80 /Pi put
dup 81 /Theta put
dup 88 /Xi put
dup 90 /Zeta put
readonly def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC1325EB8F274DD24A5D21C056364
13EFC099729365596A8A52075A624087116520034680FDBD3E86220CBF46C2E8
2BA32413E26C0AE960BB760BE98B2E1348D6A21CDB5429260899F7FF77617B00
E876499AFB997425D58673778E90672CE2F26C816F6EF6C1F6F0724D575749C5
5AE9D8CD0337709436E75CF2354AFBA7974814727450620BF79E10457E31E899
430F90AC9865F70FE6B6777C3B647DBF5479B987AFBD6DBAEA380CEC42950CA1
9398EFFA5484638A9508BECCE14A924207B97E5AF234858A214668407E3B1C24
BDA1103B502633B31ED5A3B939F021EA212882224F14BAF19AC98252F87DA621
BAD7A76149EE69C15EDBA1C4D03B2602F676C2E97E1F6A9CD9626A4E17789C3B
8B0AF1E959EA3595B7AD243F35DE25A969AF7436337B94F29464D3A269AFD120
ECF30CED221EB888BAE5B3AE1D67791A4290CA454B8C589673B09D91A1A2313C
0084F51258731A5F85BF85B31463EB8128F8DDFFC26AFD15C4DF23F2F5D94224
2710FFB4D8F39D212D011C0921DF33F9075DE91959F7E0508CA15330FE36E3B9
429DCD8C4AB86AD92441FAEB8A84C1FF068C8773FA861FA6317D2DC6E70AF77D
9B1B3F53E048AC7295DE53BDA938C85346519B70BC5EC12E67E0F82072F07940
39D882D6EAC332B9BCB99506776F93F69C855F72E914D3E962B9E64D8A64A448
733BCEBEF9452313CF049EFBECCA2B266452FBF2D9D7DE9AF0A0DBD5145F0FAE
A9283059083F5E07E64B777BD10A5624795434AF91E01B0D458DCE016F177338
7D9D4D851DA35F950F6FC1C0CC9A10F8E5DC9AF1548BD397356643DA74D1F885
F056FD4B24995E1758394F70D7D0D7A7F621D1B9639E85D7C0A2571062493942
C21F78C8B10B5B00DC2A8CCA94A526977CEF74CBB19178A4C59FDAC1DF654ED2
AF5DFE7D1D7ED603CFDD5A28BF8922EFB42A198F1E997A51F3D48184825B25DB
AB77EB2439CA7C2BDBBD7E1516ADC303F982B905BD7D67F27BF8908379CEAB86
4447AD6E68C24C51EF0C00E494146EF03EF9198629135CA92B40893750ECE37C
5DE448523D8761F7F3DD1EA7DA8FEA1B515498708743D9B6BEC7284A292CD8AB
F72B6510D9FFE0A898786B5DDC2C6225D8B8E6011A4F5FE79A8D5DD8D1E0DC5F
8248C66DCCEA51BBF3D348C56783295C7F3F40280C2A36716315EA92BE76A50D
6C90E53C64310F31C914E36C4D18150EEC64927B458ACBB0E8CDFBDE804674D1
BD336C713317826BF74E33933B81303B00A878309DED9E628DC84F2627C279DF
81D7B4B04FA75A697D53BDBB0A73425B4F2057EC06CC409C36C460EE393B21B4
0D9F43EA157774F8C38A8C9B18E6F8E2B7106F06CB24A1AE99B04D5D9B086619
D1F8BB555456F023B99DAC1E1F962D4C12E29A4429DF8404AFA0AB86289FA19E
E20349693115354F8C96DC5E8DD0A16C9383B5F78A2D23B4B871B04FEB88439A
1BC9F33007ECFCE6876E4E770C57BEEB37AA966C73A79FA9A981907EEA6D4881
CD5B2EFBF60C0D95CAD3A547F087D91BEBA4E06B571D18664F4540464E269FD6
A9E8DA52A1E59D7E8CD3631F99BCEA6627F1EAE367F5E73EE07442DAD1B9EDA7
AA0E5CB12EAAB97A53E7F294450DD6D4D54387347BC4ACF2C1AB85ED84BF56EF
278AFE0534899CCE93FA9B7849E9731EAD06A1358031D37A1761AF71787581BF
CB0C94CB1A639CD7AF6BFFF48029013A606B4752275A6FAC3C46A731251BBBEE
427D8C0BE8AEB22126E09C2B7BAE70C6F8C8578318ADCF84DD2F9EB9001E3C56
F4A74E4CAA67A8A6F3F6BF4F1DBCE88224E4BDA82A2CF86104CBC40AD847247E
8E9BA4175E340CADE99BCDEFB92860F224AAE2F7942BFF53344CF7DDE95B98C7
CB11C7863C5D92F2BA85411065CE1C037B147F0FFDB831044FDBB37617DF9211
DF7D8D3D5FFA450BB7C39913472D0A9A42BB1C9596F0DB16C60D54BBC346F3DD
914BA5BF41D36914671EDA72130ABC0FCEAD36B8E528E07A66E74515CDF01DD7
CACAFEC80E501EEEB97319AFE76C6418184C2A42E33920DC70A845350199017B
180CBABA4690CE9464791DCC68A475DE1E9CC905B648EA340A37DDFDC1871BA6
2C6084F9AC4E5104AD8FEDEDECC9B43A0778AFB446E54C63682BA87512F2BF35
91B41466FBE460D6C2655DB7D8C85020F2F098C94052C6CDB3D8517C2009C5CF
CD032B54165E5E8151A7C5951130B5F2D66A0B91151124611BA7F81397B6C989
19ADFFAF9BBE88312ABCD8AEE708B5FF6DE7769DB3203494B88B820316D3C10A
86E3754B3BDBA48B2C299E883B9C0AB8F8CAB7BEFFC4E9E6C300F839DEEAAD2C
E7B035DEF2F327A5C091B139786C1EFBAFB7B3668BDA4580DEC7E85C232ACB9B
96CB4768C70B19A299035127179CAFB457B5DB41C8D4AD227894017BE4F3CD1F
16718264F11BF13013D4C400537C645A37BA27D5EFC5B44104A52587255FA42B
7F4B9D19417D1B82E50780B9D9672118F68963639001CA1669222C933DBC0FC4
5C0F675853D5F78A6E927B8CBCC4616AAC1D8A9B8CC047DACB3A244E0E60EF2E
6DEF3077F980BE43535BEC5079723AE00BBB963F1DEA81A60D6A70F70E63A841
AEE5FBB96683F48C57510E05FDE499A8F91FF9D9E6210EB6A5D594F691C4DED6
5BBC4BEAD64F6C5EBB7AC15E34052C3E58BA586C693D9627ACAC3EFD7A563CC7
3AC3521EBE7C5497413619B4BDC22A633BAEF0A89EE3F86D7BFA70D83B68D557
79BE2A7639A2E240CA0F29E837B0AC0C4B12C0CA35665E42A5A1595BAA8C5BBC
9B798B0C854415FC3ECB99B15EE600FF5534FF96579C400B1FB4755D013DEF33
BCC79DAB9E77B28DB0265F87D3F439A8055900D90B5BD4AA7A9A8DB8957308F7
ACA2C52A19C36FBFB5A7F4413E727D79AD0892633B35AD74B639FAC96C2BB2C2
56912E24632DE5EA2E20A8A6BEEB2B622FDD8F7A3F917792F7EEA4372EAE5D26
C95BFE42BF71EE3F74706DC9EF0746F0CE3ABC958C0F53C9A231B47F182633CC
CA794DC6F5716F547095365DFA6E09B60225197F5DD93822B6700C2601EB33C3
CE8E76973DDDC5490DCB1A1839498D8884D37BD0262FBAB64980A347059AF32A
8FB82A010D31E6FC60F8C7969B756C25F193B09265507535699E3A9371B2888F
D7191421794D39C870EE7E11FA1B8E2750F90F5BACB5B71D2627F3B26BCC1BE3
0D85BF074AFE633D3FF7EAFA46E8EBF5739034C4E01D46F4D2BB84023CEB3E55
223B8CF671F38CF3CE0B329EA8DD3D58144DDB778E785BE4E8B828C83BE2BCC4
522801BA1DF3369EA0BC61B8B9645852B9069FA06686DB687A459564FBF91A4E
482BA8E2BEB2F1C71A4FEBBB9BB8D5D0E3F44C8929B019BAF0F94331AB4A3DF4
03E45365E02ED2B07BEC9556B12A22B76CA88089C2D68BE9C700049ED42E90E3
B088FAC31EBB127425782D27FE66EF35BB5B9D61F52275FAD74BECA15248D54E
CCD4AC33372F8EC5C8725D9751AEE826008517606651CDE7F666821D8A9C494F
D84AF2DF4AD58DD3204D1159879E7B74406F2C5C43B24B126C80B5C8EB9B4621
CA44DD2316EE97DE4928C7F8708A807EC4906EB1DC8715F5E59E18B9488C05D0
44C689C38763BF0D942838A37EB87DFEECB552879856A9A7C7F5A81F0831A188
FC55405216793D3E088B04BCF02926F7FCBB29015D42DA41EC8C04CD1339C22C
A71043844FAB8CD087E70E1BD3011349AD20A9B6FE8A4B6ED3D8D2BB7AAB8D4B
E1408A587F78FEA880356C5CE08D826F211CB6D1908616CC44AEEDE328BD09ED
DD90B6B4A4D2D23D7C1A6769DB1BFC99C7AE657D101B7BE4395259B0D8A37475
15345EB302A885B5C70AF6A032411566C0B9F2C7E7B7E88E75A92A09484A29A7
723A25D0F84D11E06EB76FCC8F97FDFB4A5FA6A62D4CF1D38823CC6C0BC988AB
8DB229919CC6C34A65BE676B93FF53A09D46B3467F465A48ACB2D9DF2A8B2535
B4AE03CBB89C7E118D04A74121F06E9941DE0A483447F82238BC0DB863B76FDB
A0F2F278EF30DF6CCD742000EDCED166D6930A93E8FB34B9BAF76DB6D5AF6B91
B5C96F6C7742A075F3ED8F43EA6CDDA26B3F691BBBF1059528692F9D6B5A67CE
E01CEE43C6A2AD6F9C22C65432B9EB514F9E8701A4F2FC99076DAA0201169363
6DDCE7F5CE21DCC5D346FC929FB49E349F1CE2C471322065FEF3E575C926E757
08840BE8348643D353FA004DB1B548AC850724774F091966B662C09ADF8063C7
B805442892C658CAACADBD8B4729AF5DCF7AF9E5A0F4A5C5BABA33EBDE051AD7
A9F4AA3B196F3C8AA24879F3745ED3A319D33F58A1140D18AEE6C7EC7D90EE16
19BE38C4CB7CA5B52836B3A8F7E1075DF34FD856EC6B50C793905D193E327C82
1B6EF6A248AB5C5579C81E94183CCE759C73386F6D1943B234DBD8E3CEA6B4D9
7025CB278DBE285E67320F4A31BC11CB71EE109E9C66DED95372706E4C14C984
F2D04BAEE174192346810303787639D5EA45510A2BB4A1654292CCC9012F63BE
782560F06BF427AE28809700726C9920F55AA91E89DFCF75ABC5DC85B134A4CE
5B167A565CA804820D8645F1F41AD631782B094467840DEE3963D51E3DDF50B5
7F2260455001B5021F622D9F8BAE65195ED7B8FCDEEC58681577C1F2D02A38B7
A4F350850F274DC5786F3772DD8F1687F639353C308090171A4CF24225925527
4128EEAB5650AD4876897E09C351188AF2C35DC72E74E8106C7B65993BD39779
B117E768C142E3BD240F7EFA4F2EAD5159AD41435989E004A732E402339B94AC
75ED5546667B9DAC8164091B071E6331EDE2A41048EBD759224C6CA8E032A9EA
7203D8A250873FC3E122D2FF6B8B650464BFD8062A3915AA5C35D47CC34F776E
978BE48E7987A603F8C4CDEA12D94F416366F1842DB437D72F3B232A3DB27B9E
91BA4E3E80FB721537A0897AB171C644B2480CBAB171F768679D052DB16E64E5
4EC55EBC274C06C0F9D57AB9CB41D745EF457655419CA44B5169ED1D214C3E47
30C0FA9C709B74E19E15AC9DEF8FE18B281830F4C2AD7104E0FAD04A8BA50B28
2AD26BE63A11E55EC00FAE46862549E4B5A36504CBEA559C0917A78F16E6935B
5C6D74ACBF103B9DA1EC2843E5D319ECCE6C296F13FA0DC71481607AC4CE06F0
6247CACF63365800DE27BE08D8F10624DE561410ADD366AE6B183E92AD9BDC4C
040D0E1A4B9BB0A3FA0A1013E0D9270FA35577BD9E2AA06008D9F22315EC2BA8
264270003F15CD559F65B1728DFE5983D83C52EFE376232B9432AB9A9E0B7021
2F7A4058BD3AA09ED1F32461258A9C570C099DFE8C2B7EDECCD9E74375C7E2A5
E04593DD5308014AA593F9DFFF1E729A4522D0E56C0EBF70A0A91590B75E740B
F1666E9C663E4FA767718F42433374D2167A7CB973D1E880F483A9C332287A84
40CC41BB6BFF26B0B1A712FB581140D0DACF68EDA212C56AF51732771C8A82CF
26C3DC97CF19F1E2FEC313B3BE1B4E605FCC1FE32B5477700F6038BFCAA21BE6
ACFAA4F9EE592F093401DF148C947A2D7D9F19D6A220EAF000D2CCFCEA99D5A5
86177BD187F65C95B27898436C10C41D0759918A8646B01D9F8485E834E69C55
A09ACBBD7BAB09B7F7C71E883868347681FFB348671008F945F03F9143FB021E
FE1B241801B17AE141450F37EC1DC1EC77CBD485982463409CBEAD3231819384
5B86C1D81A8ED5D83382021E074517665B1647FF29CBE149A789775C5711B8DC
A170CF86B287F498DE0BBFF827896ACED64C5367C97F6E799487C577115E8B67
06B7D9AA137D675ADF45AADD67E06DB6F23BC4BC6A86D270C2CB41149B17B453
61D9A0192B26293D34A57309BB46FD5A4630B1A6DA821AD6F30709949BFEB9AF
3EB714F9257E6A43D9B6126B0006889BA481FFB2AB9CC0E66EDC28B935F30A7D
D7EF6FCAAFAEFC79FB9ADC7204BC399C8731FFD28D6359ED87EBA0B9A383FD83
EFC454651383D8EAB861B1D0FC84A183BD3C464CD2E6E3FC7678051AED610C7D
49304C65AF766055D253A4BFE27B12F7B51CE9E45EDC01A92E1FDEB91D1E4108
CF29D4BDBE881E73F724B6F046BDBB6FFB3C1DF6C0FD517C2564012A5DD6FC7A
D20D9FBB832BAAA4044693023477D65372B54D48B82C0813DF53F8E9EFDB889D
D4C64E366FD73548E0C12273B3277D74824BFC9621407EA1FBA9432E868F2F4F
7A38E3BC5462D7CD5AA36B912EBE57C1B97E6053F3E93D90CA23804C8B729314
50BDEACB02B057F57AA72FEC84B23FAC729724D011A15796427DDE16DA5F5201
CCC19597A4DEB77854C1BB4A062A4835AC37784CC39ADEBEB5D431748C514C06

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (tmp.dvi)
@start /Fa 165[158 1[163 6[188 183 188 186 201 163 178
2[183 2[158 69[{}11 207.555 /GreekGaramond rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop Black Black 639 2668 a @beginspecial
0 @llx 0 @lly 617 @urx 268 @ury 6170 @rwi @setspecial
%%BeginDocument: tmpfig.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: i36a.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Sun Oct  9 16:28:27 2005
%%For: rfitzp@Angelus.local (Richard Fitzpatrick)
%%BoundingBox: 0 0 617 268
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 268 moveto 0 0 lineto 617 0 lineto 617 268 lineto closepath clip newpath
-22.5 405.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
15.000 slw
n 900 3900 m
 3300 3900 l gs col0 s gr 
% Polyline
n 900 4500 m
 5700 4500 l gs col0 s gr 
% Polyline
n 900 5400 m
 10500 5400 l gs col0 s gr 
% Polyline
n 900 3225 m
 900 3375 l gs col0 s gr 
% Polyline
n 900 3825 m
 900 3975 l gs col0 s gr 
% Polyline
n 900 4425 m
 900 4575 l gs col0 s gr 
% Polyline
n 900 5325 m
 900 5475 l gs col0 s gr 
% Polyline
n 2100 3225 m
 2100 3375 l gs col0 s gr 
% Polyline
n 3300 3825 m
 3300 3975 l gs col0 s gr 
% Polyline
n 5700 4425 m
 5700 4575 l gs col0 s gr 
% Polyline
n 10500 5325 m
 10500 5475 l gs col0 s gr 
% Polyline
n 1500 3225 m
 1500 3375 l gs col0 s gr 
% Polyline
n 1500 5325 m
 1500 5475 l gs col0 s gr 
% Polyline
n 900 2400 m
 1500 2400 l gs col0 s gr 
% Polyline
n 900 2325 m
 900 2475 l gs col0 s gr 
% Polyline
n 1500 2325 m
 1500 2475 l gs col0 s gr 
% Polyline
n 900 6000 m
 3000 6000 l gs col0 s gr 
% Polyline
n 900 6600 m
 3600 6600 l gs col0 s gr 
% Polyline
n 900 5925 m
 900 6075 l gs col0 s gr 
% Polyline
n 900 6525 m
 900 6675 l gs col0 s gr 
% Polyline
n 3600 6525 m
 3600 6675 l gs col0 s gr 
% Polyline
n 3000 5925 m
 3000 6075 l gs col0 s gr 
% Polyline
n 900 3300 m
 2100 3300 l gs col0 s gr 
% here ends figure;
$F2psEnd
rs
showpage

%%EndDocument
 @endspecial 0 0 0 TeXcolorrgb 1127 1918 a Fa(X)p Black
0 0 0 TeXcolorrgb 677 568 a(E)p Black 0 0 0 TeXcolorrgb
677 1318 a(L)p Black 0 0 0 TeXcolorrgb 639 1618 a(M)p
Black 0 0 0 TeXcolorrgb 827 1918 a(Z)p Black 0 0 0 TeXcolorrgb
4642 w(H)p Black 0 0 0 TeXcolorrgb 1127 868 a(N)p Black
0 0 0 TeXcolorrgb 114 w(K)p Black 0 0 0 TeXcolorrgb -816
w(Q)p Black 0 0 0 TeXcolorrgb 677 2368 a(O)p Black 0 0 0
TeXcolorrgb 677 2668 a(P)p Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
