%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.94a Copyright 2003 Radical Eye Software
%%Title: tmp.dvi
%%BoundingBox: 148 615 282 670
%%DocumentFonts: CharterBT-Roman
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -E tmp -o j7e.eps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2006.12.06:1749
%%BeginProcSet: texc.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File  8r.enc as of 2002-03-12 for PSNFSS 9
%
% This is the encoding vector for Type1 and TrueType fonts to be used
% with TeX.  This file is part of the PSNFSS bundle, version 9
% 
% Authors: S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry, W. Schmidt
%
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida + Euro.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (6) /Euro is assigned to 128, as in Windows ANSI
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /Euro /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CharterBT-Roman
%!PS-AdobeFont-1.0
%%CreationDate: Fri Nov 2 19:00:13 1990
% Bitstream Type 1 Font Program
% Copyright 1990 as an unpublished work by Bitstream Inc., Cambridge, MA.
% All rights reserved.
% Confidential and proprietary to Bitstream Inc.
% U.S. GOVERNMENT RESTRICTED RIGHTS
% This software typeface product is provided with RESTRICTED RIGHTS. Use,
% duplication or disclosure by the Government is subject to restrictions
% as set forth in the license agreement and in FAR 52.227-19 (c) (2) (May, 1987),
% when applicable, or the applicable provisions of the DOD FAR supplement
% 252.227-7013 subdivision (a) (15) (April, 1988) or subdivision (a) (17)
% (April, 1988). Contractor/manufacturer is Bitstream Inc.,
% 215 First Street, Cambridge, MA 02142.
% Bitstream is a registered trademark of Bitstream Inc.
11 dict begin
/FontInfo 9 dict dup begin
/version (2.0-1.0) readonly def
/Notice (Copyright 1990 as an unpublished work by Bitstream Inc. All rights reserved. Confidential.) readonly def
/FullName (Bitstream Charter) readonly def
/FamilyName (Bitstream Charter) readonly def
/Weight (Normal) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -109 def
/UnderlineThickness 61 def
end readonly def
/FontName /CharterBT-Roman def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding StandardEncoding def
/FontBBox {-161 -236 1193 963} readonly def
/UniqueID 15530648 def
currentdict end
currentfile eexec
D9D66F632A4812FBAE89F8A58F28761E72B1FFC5625083034B3E1ADCDDE02FA4
B44AE8F3A7B85787C8C90047C8CC19AF3F685AB532A42DE6DDE2B6C900F290EA
0E843501E6741A47C20B736B9394214370E11946173895F8DE508780F72F0EBA
B617E6A7468FB2D84028D377CDC3C4E337E3066313976E514621C47725A95FE2
55D6B29C4B5E91721651BF1D56CDCD84D4FA9F072BE27E14FBB961CCD91008A1
CDEFB20D6B8674ACB2DC8A1C918BC55D8CBCA5C32F80A63C54119B24DAB62F09
9A91E000DC8726FCD5AB1CEC8160DC0ADB17E317C54D62AB0ED986197F6B0529
45CF2090B780A57004AF4BD3FA2F5CCCEDB90A3CC06EB295C5E09E3A63BBD650
8D1CBF80F7CF38C95540896C7A3D301BF53DADCEDF4544FDCD52CB35FFDFF986
CCF2284A09F69C67006AC7FAAFC626BB2B4F177B7927638476BDE81C92082A30
5782B405335048291A27F9E7564A1A32ED4820E20EEBD649CF9445FB4AFE77AF
FFF1E30AFCAA76CBE1E9E1D347ECD26157FACC5814014AF522D2DD6A0EAC8A99
489464E48740185286F9FECAE74869679FD2432A04E2A13652D99845DE08AAC0
88E24B10664925F9349B4F2B110FD6C35C0A12D90F4E9EEF53D5F4F56149995C
4EB35DAE4FF2839382D05A26DC703935C4EC80D0500C60752113D0701777B14A
AA05AF6428926F8A8E990317A0B8FB0CEAF8F5AF8AE7CBA11EBDC6F7C13FED0B
558A27CBCDE4FB7AB119532DD43C9C2C9C5CFE8F648A67E9E289A69C9DFDDD6C
1FACC26DAB3697A170AE59F5D4EA3141667901E70307B00C067B81CE96FB3A4D
C9021D8814424EE6A26D04BF42D16363ADD70D9B119FEE817042865FBE7094F8
4CD918C631D78A2B0FF5C2D014582C29A11E838017E95F881BA04345C99FA410
82AF78A21844CB2A7D8C90AFE67D636E6761E18501816F49F2F83F3A7BA416FA
40888A993ADEA997D256B6C0AB36105A85BC548C177C9B92F77F67177CF1BA6A
964221586215A989FAC56B0D53D2D081C9A82809C99070693AF0E048AFA81209
08BF0561A7C188D6F139D11A9D2712061EA565834D94068139E65DD2A614D6FA
47767B84E3E7781B59D7FAE5D4A896578FACF87D9D79B6F31F298E705382BF18
D2E09E92D6215DF8769D6EC9D065C88DBA642AF2C56388A6DA5F1920E03748B5
E72F5BE5CC6C52580FA35C2F36D58AE151E828265EA53776C372FE24D2E9B6BE
0BBBB4196BD5689E19C3E604F93B010A4FEA8FE96B5D0DAE418D74C5D1DF71C7
6A334076DFF12DE72E6B99AC6689148200DAC4E84385BAE64B2C6CB57E6190CB
62135BF116DD8A23AD2C2B19BFC7BCD92C59F3CEE34FE433D547A1796B534F8E
7AE523E0362AE977FEF226FD94BAAD4C70C5A8E8A32782F4D0CE7B09988D2190
616F793DB31310AA2AC3EA130AD231B984FF469CCB06AF224E92283BE5F7F9BF
42EA170FF2EA9868BD476319C35DDEB36A337FBA68FB0D443B7439996A34BE0B
0F5BFA99D987C825A6A871961DC30203926A87654006B36A55D11929E44C07D0
3436CB49F91483E2D1C8A18EA3B97F826B0E1339008A3F5EBEF2F835DDD975EF
68B4705E3C9CD06D4C0687C45C5D8BF699A58F1BFA1D0FF7FC61D97D8DB121DF
70CF329B7E564AA3255C282ED0065912F37209017BA1D7053A236404661DE55E
772F79CF300369C8515B3E0E77DF13BE24CE497C50FA49628CDC2A8FB41FBF08
C8700C42F126DF4DA9E8A2D12709540CD2E6BF38BECD3B9F74A6B21D04D33D8D
48060552FA287949146F8FA9995036387E9287CF28953286A517B34F61512C11
0FAB7197EF3687922CCCDCA69FE06471A1139DB382F2181EC00A0208E0453F66
2AE8D2E819519ED25AE6CF3EDBA68616B31F640CAC28723484FF9A156EE1E301
BF41C418DFA309891747986CC3B29FD5B474EFAD513CFE9712A378B71A544E77
E68E001C75B22145C83A8CE2EB38CAEB1CFA5C9924056F33ECDE6F09F7C281C8
B3502BC6C8D2763551EC71ADDE088CB6EBFCB46978D4B765E89313CF1147270A
CC6DB471E53DC3715CFF2AC0644244F63F8367906C7C4648EF13C962DA1E1EA4
3428D1AAF3356F6E3655663D01FEFF21E9AE53A0E8334E3F732E5024F50D492B
1DC7771D36894DBD4667FC711E158D13F55A2A587261AF3A241EF517B5E4A0B1
385301E83D3E036A9A9FF4C058B2A02018ED03A84DBA4A7D74CD40A592B82070
36F36ABC924E9C16E0ED9C96AD4984EAAB559F0DFC59E939310162A1E2EB2870
A1CDA6516BC36FE176CA6C311D84D4D071C1465CB512E285D3E48B59982DF1E2
D87BF0D60C460463A4B86A2F487BB059DD7A3BF104BB3C5A766610DD11AEA63D
F700E40C2F4E2493201FDE2D2E1EA7349E3268298EE4AC048C897052A71A849C
48835E12CF7F92D2E6F78D08128C27B9972501BEFB6B0BF7B4F2044FAED9C1CC
B2079767BE88E0F05541F9D31B4518C650C8A65EFC9AC25287D50DEA949CEDB6
5B13B564F0C0172F32136BC1076BDEE118B9B0874893BE52F945415C4D974E2C
83535F8F5AF589D7E094DA3786557D4641B2D783A465067167D740EAF1D60DA2
93C91700EBAF3DE4F3A232CBE23A358E8314D625D99ACABFD20443A5976A17E5
77F4F0C85F1CE43CE4800B8D767BE312B7582AB711AAEB40E373B17240E99947
A8E089565DB9B2EBC5F6FDA3736DA3F4AA698D058CEB6FE5005E175D08660485
CC3C765DCFAC1433517D4AB749F9B0146D251C70EE01B404856CDC7141A279D0
0D1ED5E8A86BE9DC1CEE1FA1BFEA86851BEE10F49B570C15BE7C487CA927CA17
5059B26DC2CC164A387FD57E846D584273E0B0EBA086A8D7E35072A91DE1F404
87D51DC24E7D43470857684E0A295E1D4E2D1E124C2F744079F771302E87A45A
22ED99B04853D64E5206B0047C1AA90A3D58E256F5D1EA5DA5E33E82878404BE
7530ED3C037A7194E16881194F518B108CE5919F4F11B8EED51E921C36102B8E
50CF991BA79BB6EEEEEF6B5E8CCBBD3A434F6EDA30949F82D6F92FD767EF572C
5CCF7226E8A936304D6430DCC8C210038D543A28FD4764F5AC62C7103B9DB2E3
08508AA2BF0B96A81784E3932794ECE43D831CD8DE1CE2CDEE9BEE0507016F76
5141A5BA501A885AC7BFB2C628BEB9DDA66D72689365761E9A49C5275E66B113
94892754D275C2FE08E21E18F07AACD4AD77F3C148751D33F7C872EA5EA529F6
FE7FF91F254AF524353BE8D5439F069E1460F810D3A249AD283F5387224270D8
19DFB2BC7E6B3D00BD2BF834FB96990975B0F9535C4BB445FEFEBB1E5752EB0A
5E050A6EC37245395BEBAB0F1F342659B01BA0C675FAA15E66FE378123B48648
39A4EC0AB40724C837E0BDA33FCCCB85D2559750B2FC25423470B9D390A376A9
384721C87D740462E3F2ADACDB603F042ADB926EC8CC9BFFE37D3A5B2BD7293F
8BAAF285E0BBF8B6550CD18A2B64E477C72E6CDA1458BC8DB8E1FA6FC75D0B4D
9C69CAC90641C86A6AFC2A747DBD9DF99EED9AABA70EBC005B5E6DB03CEF9926
36C62F6E7F91416861A6D901F338FB71E7ABE6EFEB2A6172EBC195AF060BDA37
0C2418097F96372E53EC7A8A986B66DDC9D43486DF7BBC25DA7797E41AB8ACA6
AB6C89355CD86B964A9A80FA6FF61693FAF103AAC05C6BEEE1839AD608547354
CFD661ECCF04129096B4B29DF4589570B10C987881BBF2574D9870185465C993
CF39AA118EDA978CD8C88367330901C5836918C02570B0067EEC8312DF97DFB0
1C58E4F50B92CFC9ADEF90506454D1D85D87CFDE6265F2A13E383D10CC099B1B
D727624232DD4669F20BDB3CD1453C092943DABE81B5E12506D617FE3E40FF0C
A96215E13BB130D84AB9618A4CA77BC722DA0DB4E8E0969823903B0BDE2C40F3
2C788A9E7E211E3B6E052E1597B54239B49B65EA28A2E25305E2AA5FDE6BE19E
CA61519A64768B17FECFA7C2E70A40A600E46C2E6B005017C69F98FA1387594F
6A754526D5861D0184F4956DB9D99E9EF07A4EA1A610638180966A2F7C2AD8EB
F5A0BA0AB57A17600467ADC64D40E2DDC09A20C635F4A31EE7970EEB60623871
FB07B89AC5220EDA163A25BD4637F10FC9B890BDCF08DA799B2DE05BA12B36CE
5C9001F9E7A0149021BE5A45D291DA47380DD3897318C1A8C04AC209B7BC0C58
945E6ADB0C8D23AFA307E81393E6E09247A743143BEF56E9B412A72B8668BA3D
D3558B16E94DD6CBC30B1035847E05E4265260979C4DEFD0C7F2FBCC8C2C221C
3E656F55B139CDD5E409DA5AE5799A1B6A8CCEC8CDDE3DE2B357051726B5230D
7FAEFAF02DC8E4E2CFAA29D00949255F2E5B8282A1E37C877AB3F6F1C1330403
01738DFFC58105C84940881ED714CEFBABC4B6FC5784C060DC65C9CEEE3E3153
FCAB3050CA554562F2A0BF28E5FAFEAD5B64C88009591783893E477F543893AC
88C956281FB667DA4D45C9BDAC04A741EECE2BA7DA0B4DC7EF56F0BC4307C6A4
AAA30A49C23069327FBAB194F3DC9FD681EB4AC7F7CE44D769594E031390BC67
BD980A6E0040954A032E18FFC60397017348ED2321BF5A471FFC465B8D40FA63
BA7304D49501F13D3AD3DBF79CDC8B253A1FAA8CCA70FB7D927E36A2E4A6F34E
5520DE8F2FBF5C4838955B0A2947957AA9A893476B28F8B4B968EBCABB8ADF9D
68BDA09135923EC1450F23E334137EED80A458384779DB29211D89008139D226
33C048E96528252A8E6D8882338B830F29717444C8E2C33EA2B27F17187F1F8D
849C0CFA21F97823A6688ACFE4B442D1B9FE2B980DA6BB8A6C096E175FDC70E2
1D5F1E38D591C8B3C8EA891CD41600A9C7F00013BF9997611ACD8B025A5AFB18
62A97BE0CA0C53DE75F932A392B5BD2715859B5C81A2C07F42C51E662E25ACCD
ED6882A23557C77BFD275F66304BDF4FF32CC5BA82DFAEC4C858A83C9B3D1759
90C551EFDA7E83C2F379B07B946206E88D274DD8EEED230B078DFB8D8027680F
175B65BB0A9796DFC3E2A6A0FBECB0B08026E3115CDBB73E92EF174067EDFC39
B54D68170590305561B470C1028F44347CDA0C2E3AAB94DC65ACE96C93150C79
4DF2EC0A7568FCD3BFEC42529738A30A70037196188773527B5ED1AE417C65DA
9839F5FB235266CDDB381F84343DDB171D5983A223C40DA480B8D2EB93744052
47E96D18D1E704FE1FCCCA6BC89C2B640350DA4415B16F8A16094F0363CCFA3C
DB0DD546C8DCF829FFDAF5E74341B83BE025CE19D5B68C7ACFFF742EB9310098
DA93060700C44B538EEFBA6788A85A9A6FB9BAEEBF57D14388C076F5ACBDB61E
E45F207AE93E4BC9355CD59870B8C57F0F0F73A2D63381EF16B585CECEC6454D
27E0FE63F142BF6DC075F7F924B26DF8A06E3329EF7A040F74649D7FA4ACCE1D
B889857848165C1548740C594BBB155B92E6AA39C18042C623409BA3A7FD94B0
B677CB830DEC524749A6C5C0F20571E59B5DF4EA18E0211894BC25EF1B7E9D68
7F5AE3BD49F4C1524900738C7D8D50E12ECFB7175B7A13A9258F9FA9E474804E
B0AF360BFEABF563ECB5AF94AE88F4868F1661EE6D13F9043572C7B598E3BC4F
D84AE6910BD6004EAB05E713C3C62B28BFF4B19946DD153CC5606FCB41F763FC
0A64510269484241A8D61FAFCCB13A1718AF47D612C7F84852FBA1471C340B36
FC4EE30A6583A90194B818C87D1D52FD66D6688C48F8931E299E3104D3E851A0
65AB01F7FEE6A373F4674AD17C39E1D2E94C966C7CD5319D4D4B61B4D125FC3B
7DE22F18411D22FD178993C5D8D6AB144CCA4F1BD8E33145C55B18C0C86FD39D
6EB5B9BD806A94BE6EFB28733CE39CD39D602ED27A73C03E210516A72DEEE11D
44C3BBD3FC68C8E444AD667F9BD757EC94323B4FD64EDECFB240CF436641D998
07821F2C60459327E48CF0D64EF0A65058B886CB6E6FDC166EA85FDC697A1C20
A1195712C9C3F6C7F21AC95E4E681ABBA3610A88812C8C8E8F5A702F0D7F681B
F743F1F9E64E2EEBE0E82A93C1D6CA7EE4DB43C278525B3FEADD02DC41AFE6EF
F256E9DC175A2ADBF33C3567BCFB11D1D73B8563A50976414D6DD452E527C49A
2843BDA1BB7DF11D303554BA06AE21CE179E5A931A9AFA595D75D80595724B00
455F3828D703CCB29BB0939391BC57E2E68420A120860DEFCB857A13987EB96A
2EABECAE969B7ABA98EB37CB2C2A8E85FB506EE9A134DCB97C2D0E37076A214F
F170CFD88948D2849734E5F9DD5CB59F839D9C10CB8B4D68135EA9AE1DA613DD
5099DA4BB1847473B650C674E740A1F152EF4DDDA873EC7D8E8A9B917BB0AE07
6C2F17DFE9B08B5473DD51A322ADB70F7048786D9A0D5D6A4E5F8C3F9E39E4E8
5823AE98E2212BCB115345D433ED23D77D27D3C6685C381A1D0B2B1B1B18AFA0
D8B5DF892F2A258F023C1E0DEDF9BA522BD3EDDCD95FC9594E48280F2AB7DE32
1121B0E6E27D58BDBDF02AA83FC9C8E54BE4CA04D230E5F18A7E63EFA5B5D6BC
CE93B549EBC45A95688575A4D2874A9294AADDC815CF2779071703DC40CB9AB1
60342725C767B37870CB666228744D96DE6642548209C4724C212856B7151598
2B1E43E92E1F61DDCAF0E017BF689ADC269297B0F87D786CB1F95915DDD74AC4
4D1A1F4B94F0D92A7A8A44160BF79671011CA5DC1E312F7955A76B94B532008D
9F086F583741122907F0A3DC00C10F27F2D2E26F44F078E6DB1A0339006E78E1
E729D890FE412DFDB2B9E42CCDC718B6C25AA76BB5BA281C3C1E7F69717F22A0
5408BB2DA0F3D2CAE3F2C028C5EF24BDAEC62C59522161C10742AE281E6314A3
6EF5B8AB092BC46D3D72DBF4A09607B08971713EC89B19B54432E5B8BBE36315
E7ABEB079853BC21C88A8E8AD88833A0F166ABD660603A168F763BCCB58DFFD9
8881DAA1855C2DFB7F28CA33067D3530930A4036BBA41BD0B24148686EC19656
7DA113D2EE807CF574D5CAE26446BE50E2763F481411D6FED5F00FB3538E15B9
C28DB841F14796F1EDE6041ABA9018830A3C47881F562554E4594670F4F8EBAF
603456B1F9CF94C24746C3FDA17F2CA4C7AB1A7A400519ECB3E93A81C5237027
2CCB91975FD6E11FD00743FEDE965279AE73809510EF7D2C216375FAE541F3A3
F922CC67D4ABE060F8CAFB79B69C939B824AECD5A0A9EE8CD50099D44B433185
E6D1D7D790CA6F4D37A9B913EF8493903021E57B660388BA4F7B89EB9AF7DE85
95A5B96CDCDF3F331602FE0FC138EDCFBD64318AEADD479A302AA01520BB0579
1CD40737F9E58752F5CEBDBCC730799C7D64DC559C662F66E625A1D5263AC2A4
728B61A2A9D936AC26E84124A3DCF8E2C447F8592B22EE06A5C3DEEF975CAA1F
F7449B09E15CB4DF774A63C6E75A740645768D396C6FC37B51609D79650E646A
065183B177F7241681D3EAA0C81B563E942541118147BBDD433CFD0DC8A2CBBE
BFA8E0E42C2BB3C481C676B3BB0293480A7D43A0387D214201BAD67FC1322BEF
379122541DC60BB39BB060ED6495AEB81C99A840A08624C191C7CBB0E6FA0627
A9796CC7E4B39FED998FFC3D6487C75740AAAEE3F0A23BDFE20C65EF76775937
5E2E460C274A29EE2FC01C25913BC46D6859569029C1CB2337FDCF05297392A1
33E79988DD862CFDC0F7B123089A4504A0CEB5126543B63083683ABBF6A5C4C1
3787E809D3F52C5C7726FCC186FEEE4B53844F55712F34B290F48597EB10B290
F6592480D960765CC29F3A81304A929EE667928C43BF2F0C2D75CA624C540143
A1A35004D404E9A2F1002341AC27752FD09980C2049EFD433861BBF7422FC91F
216662C874B4E7EE3A8A30DB997012DE173B4FD18DA3FC0A9778F52ADEC865F1
13EB4852405A6C2908EBEBE3E29F7C4A3875FAF6CA586EC406B93A9765AB5BBB
8BCC95F47228F30D503E1E0A943EEFBBDFB5B6C617E15489A8581C889852ACE4
2420C727F4098ED71484E84C012FD6ECBBF8E8A4FC1BF20823D417D36884248F
1C6316A5191B4D7908FA753D997501CA1851EACEB7A989BD9058BD3314049583
1CCC24FB4A657CCE94D311F51A49324E990A4472826671240C0337DA386BA760
FD57B0D8DA99E95316FFF4261FB4AB11E85F2D8FAAE4A7A3AD2701FC6047E741
415A1099F973FD9B3746D983B0BB9E369D4F185B2B20E84711DECFC928A7F45C
2F1D66FA149FEDC651186F696F54D04558ACD11436CF3DDAC60EDAB487A03399
B05C4CEAD10B4729E5749A10EDBE6468CB5F377B91110F73EBA7EDA48EFCB71A
D21DA9BBB3CC59D3FBE6A84F1F9521968C2F766B2F8A99A037C4AD3B5EFD6019
A594FA93F08C5B690EDF00F3FE36C9EAAD3F62DB65392F27E085DF06EF9CA11F
287FBD3EDBCDA51187777E14F63F0C42B83345E9A9CC31E53FE4E5C149D38E45
7A04CE493F5CA6351ECB3F8570D5DE1EAB3077591F9D6691D995AB05644A55EA
5E3553D809F9ACE1C8167BFCC77AE861B685EFB2AAE33C38800DC2638765C46E
B397AAC003B01CB922571B8E5E7DDA191AB3825D43E63EEAF542F7B0A2B7AA4D
3E1BC04F7FB96BC2C4563C7D80C0F4467739B15C2C7365A94C6659ADC3A90F91
F7A8FA130D6EF52F14202317FC40F6E9ED456299536AA77BA502F0C5E8A0F09E
221814265D1BDC9AD9DF4202E2704E0D68C940728F0B1869E2E6476C7D42C6CA
A9A2C6B4A83F47864D1624747054CC1E059D44F19362D107D0BD13D9126BAEBC
8F832D6DB1BFB84FA980E06FE4DB475880833C859965AB46710BE578153E0CFE
7383C05447C8A5E11A3D7A81DD6425166CD9773B14B0CD37D14E182297E197FB
8F16961C53BE9BDD3A9DB16092B5A995726D757867D1B86536A29DBD48478B6A
1E8CA27C03278F02394F4611CEA11A79DA66B29A3D7BEF615BC915A3242DF909
2C9A531353D18DA8595E93EA029A494975C5A309981F2D2731E61897DDBFD744
5D1923A09050F2086F0B643A4E89E610B4CF62AE247F3DE22AA893B12BB1011E
EA4891546F4AC7FCA094F32499C0F88AFA604B57A9887F12F7F89A0891D0F79B
13BF8D521B47C6DA9DBF0F87E5F9CC5B8C6B42568C00CEF12F65AAB258558D55
DCDDEBAB3618499582A93468F235A869B3D25FABA1C5EC63DDBA6487C041F4CB
92CCF5276BC51965FA70CBD68267079F4F3D8D15F4AF3F45118CE48A71650769
0C61F42C03D1492C3091905914B27B6FECACAAA0FC188DFADCE370FC5CE6CFD0
099193F9F8A854E4C5A61DBF3CCB015E2E5C18F749EAC4294A767831BCF78C0D
649ADCE363237782E3B2AE143E6006B6CE030F28A7B90ECFC18DAD4669FF44C8
B9FA134AB288B2B12B3DD933BDA03592EBFC51B52DC2FA4CAEC63494E3986C1F
0347A9C30632A54D8FD7D1420E3F5FB231DFAA79092ABF4C39A8F98BE4396C90
0A787F728B417168EE9C32721CF77B2BD9876CDEF2B7114A339E9A7E37AC81F9
D77E4C334BA6EB4E7CA147569CAB617C907FE6F4C7ED1FCD6FAB44D4FE2E7097
A0E362295D186925971163B354E080F5963C36F8294F63AC5C48767A955C5840
E7C0C8F3954FDAA2E22CEEF3B0647E06B9F124DA8D0D567430341B7DF75A468C
E4322ED8175CAF404032DF21CBA457FB6C0EEEB5DE4DAA692E5445B9EE2DD1D4
0D2C30C81E373C26C2B8B8A2A90B6D4C921AA716CA060358275138233CED47B7
9856EE5CD771D0452943086457A0A9C8FDAB42AA5E7754070726A19A0A499FB0
02FD349F3D9B1A1CA16D9D51FFEEF06B97CE5AB81B61864F3C0EABFA7DC97714
6C439F7CBCF63C778A1ACC6CE48413A746EDA42F41914C32A74C8F6347EF372B
8E59BA71B93DD88B3972B48B1E30C6D76A40FF53EEBD0AC3AAF874F416EB00C2
34CB6517330EA6D2CBD8F79E0420067817804C8ADA10BC2C8181E10A837BBDB5
FE2B582C2B2A045FF77EDD313D96A35F98B075FE746FDA33DF573A884EB1B403
8F7950F10AB5A8B9E72334C7140EB0C088436BD686E1B0A9DFD8D5BC73BB3D14
BE8E9C98B28B01A34CD920A0B22C4C3AA4AB0E36760A7F64EE6C3540EAA8026C
750EC43FFA02AF46052088E0B986D85A3DFFFFF29FECA619325E91C31F413291
624417140DD808A9DFD5516E8C60F396C64DB21024FC6AAC852ED919AC1A2875
7C746868BB929D817811F3D4E106931E2FF5AECE11D7F44C296034821016E7E2
BC0E9F0D7626E558B8376A363ADB71CD5F151726CB7971C47190A4BE71547952
0106CD0A4FA777680423E966A09EC18427BDCB1629D6C12382163AA2CB991A9F
2790A251B05F703FF6FB66E33F73AF5D4B04AD9DAE6745DEB497D050CA6A067B
78BEACC450782B61F637A6420B72FFFE8310BC98BDEEC59217324B36B483573D
20D6DA13EAD4B352911E53A33C6D4116773DE9454A9AFD59839765D9B4F61B8D
3774A424B92B1D97A7D3D4BFC832437711CF73F3703A1437018EAEBDBA122B6A
71B8CD1BFEF86571F3A1A737D350CE2B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 600 600 (tmp.dvi)
@start /Fa 189[125 133 65[{ TeXBase1Encoding ReEncodeFont }2
207.555 /CharterBT-Roman rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
TeXDict begin 1 0 bop Black Black 639 868 a @beginspecial
0 @llx 0 @lly 132 @urx 52 @ury 1320 @rwi @setspecial
%%BeginDocument: tmpfig.ps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: j7e.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Dec  6 17:49:12 2006
%%For: rfitzp@Angelus.local (Richard Fitzpatrick)
%%BoundingBox: 0 0 132 52
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 52 moveto 0 0 lineto 132 0 lineto 132 52 lineto closepath clip newpath
-193.5 171.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
15.000 slw
n 5400 2025 m
 5400 2175 l gs col0 s gr 
% Polyline
n 3600 2700 m
 4800 2700 l gs col0 s gr 
% Polyline
n 3600 2025 m
 3600 2175 l gs col0 s gr 
% Polyline
n 3600 2625 m
 3600 2775 l gs col0 s gr 
% Polyline
n 4800 2625 m
 4800 2775 l gs col0 s gr 
% Polyline
n 3600 2100 m
 5400 2100 l gs col0 s gr 
% here ends figure;
$F2psEnd
rs
showpage

%%EndDocument
 @endspecial 0 0 0 TeXcolorrgb Fa(B)p Black 0 0 0 TeXcolorrgb
639 568 a(A)p Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
